<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="lenovo.mbg.service.lmsa.flash.Tutorials.TutorialsWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors" xmlns:generic="clr-namespace:lenovo.themes.generic;assembly=lenovo.themes.generic" xmlns:convert="clr-namespace:lenovo.themes.generic.Converter;assembly=lenovo.themes.generic" xmlns:lang="clr-namespace:lenovo.mbg.service.framework.lang;assembly=lenovo.mbg.service.framework.lang" xmlns:genericControls="clr-namespace:lenovo.themes.generic.Controls;assembly=lenovo.themes.generic" Style="{DynamicResource V6_DialogStyle}" Width="778" Height="434" WindowStartupLocation="CenterOwner" Title="Tutorials - Rescue" xmlns:tutorials="clr-namespace:lenovo.mbg.service.lmsa.flash.Tutorials;assembly=lenovo.mbg.service.lmsa.flash">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/lenovo.themes.generic;component/ThemesV6/ButtonStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/lenovo.themes.generic;component/ThemesV6/DrawingImageStyle.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <convert:CompareValueConverter x:Key="CompareValueConverter" />
      <Style x:Key="v7_TutorialsGoBack" TargetType="{x:Type genericControls:IconButton}">
        <Setter Property="Margin" Value="0 5" />
        <Setter Property="MinHeight" Value="14" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource V6_ContentBrushKey}" />
        <Setter Property="genericControls:IconButton.Icon" Value="{Binding Icon, RelativeSource={RelativeSource Self}}" />
        <Setter Property="genericControls:IconButton.DisabledIcon" Value="{Binding DisabledIcon, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type genericControls:IconButton}">
              <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5 0 5 0" ToolTip="{TemplateBinding genericControls:IconButton.LangKey}">
                <Image Name="imgIcon" Width="14" Height="14" Margin="10 0 5 0" Source="{TemplateBinding genericControls:IconButton.Icon}" Stretch="UniformToFill" />
                <lang:LangTextBlock LangKey="{TemplateBinding genericControls:IconButton.LangKey}" FontSize="14" VerticalAlignment="Center" />
              </StackPanel>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="imgIcon" Property="Image.Source" Value="{Binding DisabledIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                  <Setter Property="Foreground" Value="{StaticResource V6_DisableBrushKey}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="60" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Border BorderThickness="0 0 0 1" BorderBrush="#D8D8D8" MouseLeftButtonDown="MouseLeftButtonDownHandler">
      <lang:LangTextBlock Name="txtTitle" LangKey="K0964" VerticalAlignment="Center" Margin="20 0 0 0" FontWeight="Medium" Foreground="{DynamicResource V6_TitleBrushKey}" FontSize="16" />
    </Border>
    <ListView Name="lv" Grid.Row="1" Grid.RowSpan="2" ItemsSource="{Binding Steps}" DataContext="{Binding CurrentModel}" SelectionChanged="OnSelectedChanged">
      <Control.Template>
        <ControlTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="400" />
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="15 15 15 0">
              <Image Name="tipImage" Width="364" Height="320" Stretch="Uniform" VerticalAlignment="Top" Source="{Binding SelectedItem.TipImage, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
              <Image Name="tipImagePartDetail" Width="364" Height="320" Stretch="Uniform" Visibility="Collapsed" Source="{Binding SelectedItem.TipImagePartDetail, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
              <ToggleButton Name="tipImageChangeButton" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0 0 0 70" IsChecked="{Binding SelectedItem.IsMagnifyingGlass, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Visibility="{Binding Source, ElementName=tipImagePartDetail, Converter={StaticResource CompareValueConverter}, ConverterParameter=null:Collapsed:Visible}">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="#FF345375" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                          <Border Background="#FFFFFFFF" CornerRadius="5">
                            <Path Name="path" Width="20" Height="20" Stretch="Fill" Data="{DynamicResource V6_IconZoom1}" Fill="{TemplateBinding Control.Background}" />
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                              <Setter Value="{DynamicResource V6_HighLightBkgBrushKey}" Property="Background" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                              <Setter TargetName="path" Value="{DynamicResource V6_IconZoom2}" Property="Path.Data" />
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </FrameworkElement.Style>
              </ToggleButton>
            </Grid>
            <StackPanel Grid.Column="2" Margin="0 15 20 -10" Orientation="Vertical">
              <lang:LangButton Margin="0 5" Style="{StaticResource V6_BackBtnStyle}" LangKey="K0755" LangContent="Go back" Visibility="{Binding BackBtnVisbility}" Command="{Binding DataContext.GoBackCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
              <ScrollViewer HorizontalScrollBarVisibility="Disabled" Height="300">
                <ItemsPresenter />
              </ScrollViewer>
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="tipImageChangeButton" Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="tipImage" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="tipImagePartDetail" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Control.Template>
      <ItemsControl.ItemContainerStyle>
        <Style TargetType="{x:Type ListViewItem}">
          <Setter Property="Height" Value="auto" />
          <Setter Property="Margin" Value="0 0 0 10" />
          <Setter Property="Foreground" Value="#FF001429" />
          <Setter Property="Background" Value="#70D4DCE3" />
          <Setter Property="ListBoxItem.IsSelected" Value="{Binding IsSelected}" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <DockPanel>
                  <Path Name="path" Width="10" Height="18" Stretch="Uniform" Fill="{DynamicResource V6_HighLightBkgBrushKey}" VerticalAlignment="Center" Data="M10,0 L10,0 L0,8.6225 L10,18" Visibility="Hidden" />
                  <Border Name="border" Background="{TemplateBinding Control.Background}" CornerRadius="5" Padding="0 8">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0" />
                        <ColumnDefinition Width="36" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Border Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Padding="0 5 8 5">
                        <TextBlock FontWeight="Regular" FontSize="14" Foreground="{TemplateBinding Control.Foreground}" Text="{Binding FirstTitle}" />
                      </Border>
                      <Border Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Padding="0 5 0 5" Visibility="{Binding RadioTitleVisibility}">
                        <RadioButton Name="radioname" GroupName="radiogroup" Width="30" Height="30" HorizontalAlignment="Right" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}">
                          <i:Interaction.Triggers>
                            <i:EventTrigger i:EventTrigger.EventName="Checked">
                              <i:InvokeCommandAction i:InvokeCommandAction.Command="{Binding DataContext.RadioClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" i:InvokeCommandAction.CommandParameter="{Binding}" />
                            </i:EventTrigger>
                          </i:Interaction.Triggers>
                        </RadioButton>
                      </Border>
                      <Border Grid.Column="2" VerticalAlignment="Center" Padding="0 5" Visibility="{Binding HaveSecondTitle, Converter={StaticResource rescuebool2visibileconverter}, ConverterParameter=True:Visible:Collapsed}">
                        <TextBlock TextWrapping="WrapWithOverflow" LineHeight="18">
                          <lang:LangRun FontWeight="SemiBold" FontSize="14" Foreground="#7F7F7F" LangText="{Binding SecondTitle}" LangKey="{Binding SecondTitle}" /> <lang:LangRun FontWeight="Medium" FontSize="14" Foreground="#8E8E8E" LangText="{Binding Content}" LangKey="{Binding Content}" /></TextBlock>
                      </Border>
                      <Border Grid.Column="2" VerticalAlignment="Center" Padding="0 5" Visibility="{Binding HaveSecondTitle, Converter={StaticResource rescuebool2visibileconverter}, ConverterParameter=False:Visible:Collapsed}">
                        <lang:TextBlockEx TextWrapping="WrapWithOverflow" LineHeight="18" FontWeight="Regular" FontSize="13" Foreground="{TemplateBinding Control.Foreground}" Tag="{Binding Path=Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" LangKey="{Binding Content}" />
                      </Border>
                    </Grid>
                  </Border>
                </DockPanel>
                <ControlTemplate.Triggers>
                  <Trigger Property="ListBoxItem.IsSelected" Value="True">
                    <Setter TargetName="path" Property="Visibility" Value="Visible" />
                    <Setter Property="Foreground" Value="#FFFFFFFF" />
                    <Setter TargetName="border" Value="{DynamicResource V6_HighLightBkgBrushKey}" Property="Border.Background" />
                  </Trigger>
                  <DataTrigger Value="Visible" Binding="{Binding RadioTitleVisibility}">
                    <Setter Property="Foreground" Value="#FF001429" />
                    <Setter TargetName="path" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="border" Property="Border.Background" Value="#70D4DCE3" />
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <EventSetter Event="Selected" Handler="ListViewItemSelected" />
        </Style>
      </ItemsControl.ItemContainerStyle>
    </ListView>
    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="5 10 50 25" HorizontalAlignment="Center">
      <Button Content="K0771" Style="{StaticResource V6_CancelBtnStyle}" Margin="0 0 70 0" IsEnabled="{Binding IsPrevBtnEnable}" Command="{Binding PreviousCommand}" CommandParameter="{Binding SelectedItem, ElementName=lv}" />
      <Button Content="K0627" Style="{StaticResource V6_NormalBtnStyle}" IsEnabled="{Binding IsNextBtnEnable}" Command="{Binding NextCommand}" CommandParameter="{Binding SelectedItem, ElementName=lv}" />
    </StackPanel>
    <Button Grid.RowSpan="2" Style="{DynamicResource V6_WndCloseBtnStyle}" Click="OnBtnClose" />
    <Image Name="qrCode" Grid.Row="1" Width="142" Height="142" HorizontalAlignment="Left" Margin="132 100 0 0" Visibility="Collapsed" />
  </Grid>
</Window>