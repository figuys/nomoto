<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="lenovo.mbg.service.lmsa.phoneManager.UserControls.Windows.SwitchDeviceWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:lang="clr-namespace:lenovo.mbg.service.framework.lang;assembly=lenovo.mbg.service.framework.lang" xmlns:generic="clr-namespace:lenovo.themes.generic;assembly=lenovo.themes.generic" xmlns:genericControls="clr-namespace:lenovo.themes.generic.Controls;assembly=lenovo.themes.generic" xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors" Background="#fbfbfb" WindowStartupLocation="CenterOwner" xmlns:windows="clr-namespace:lenovo.mbg.service.lmsa.phoneManager.UserControls.Windows;assembly=lenovo.mbg.service.lmsa.phoneManager" Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly=generic:ComponentResources, ResourceId=defaultPopupWindowStyle}}">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/lenovo.mbg.service.lmsa.phoneManager;component/Themes/ComboBox.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBrushKey}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" BorderBrush="{StaticResource ThemeBrushKey}">
                <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                  <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                  <Setter Property="Foreground" Value="#FFFFFFFF" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="#00FFFFFF" />
                  <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                  <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ThemeBrushKey}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="border" Property="Border.Background" Value="#94a0b0" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                  <Setter Property="Foreground" Value="#FFFFFFFF" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border Name="border" Background="{TemplateBinding Control.Background}">
                <Image Source="{TemplateBinding Control.Background}" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="#EFEEEF" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="border" Property="Border.Background" Value="#94a0b0" />
                  <Setter Property="Foreground" Value="#FFFFFFFF" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid Height="188" Background="#FFFFFF" Width="470" Margin="-10 0">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="3*" />
      <RowDefinition Height="4*" />
      <RowDefinition Height="2*" />
    </Grid.RowDefinitions>
    <Border Background="#00FFFFFF" Grid.RowSpan="4">
      <UIElement.Effect>
        <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="#DFDFDF" />
      </UIElement.Effect>
    </Border>
    <Button Grid.Row="0" BorderThickness="0" HorizontalAlignment="Right" Style="{StaticResource WndCloseBtnStyle}" Margin="0 5 5 0" Command="{Binding CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    <Border Grid.Row="1">
      <lang:LangTextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" Foreground="#aaaaaa" LangText="Cannot switch device. Try again." LangKey="K0672" TextWrapping="Wrap" Margin="40 0" />
    </Border>
    <genericControls:LComboBox Name="stepCombobox" Grid.Row="2" Margin="80 15" Height="35" IsEditable="False" IsTextSearchEnabled="False" ToggleButtonIsCheckedBorderBursh="#D6D6D6" ToggleButtonIsCheckedBackground="#00FFFFFF" ToggleButtonIsCheckedArrowBackground="#FFA500" ToggleButtonIsCheckedForeground="#FFA500" ToggleButtonBackground="#ffffff" ToggleButtonBorderBursh="#D6D6D6" ToggleButtonArrowBackground="#FFA500" ToggleButtonForeground="#FFA500" DropDownBackground="#ffffff" DropDownBorderBrush="#C3C3C3" DropDownBorderThickness="1" DropDownItemBackground="#ffffff" DropDownItemForeground="#FFA500" DropDownItemMouseOverBackground="#b9b9b9" DropDownItemSelectedBackground="#e2e2e2" DropDownItemMouseOverForeground="#ffffff" DropDownItemSelectedForeground="#FFA500" DorpDownPanelVerticalOffset="10" EmptyTipsForeground="#cdcdcd" Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly=generic:ComponentResources, ResourceId=DefalutLComboBoxStyle}}" ItemsSource="{Binding ConnectedDeviceViewModel.ConnectedDevices}" SelectedValue="{Binding ComboBoxSelectedValue}" DataLoading="{Binding IsDataLoading}">
      <i:Interaction.Triggers>
        <i:EventTrigger EventName="SelectionChanged">
          <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        </i:EventTrigger>
      </i:Interaction.Triggers>
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <Image Name="item_left_icon" Source="{StaticResource bottom_usbDrawingImage}" Stretch="Fill" Width="12" Height="20" VerticalAlignment="Center" />
            <TextBlock Margin="15 0 0 0" VerticalAlignment="Center" Text="{Binding Value}" />
          </StackPanel>
          <DataTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}}">
              <Setter TargetName="item_left_icon" Value="{StaticResource bottom_usbDrawingImage_ffffff}" Property="Image.Source" />
            </DataTrigger>
          </DataTemplate.Triggers>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </genericControls:LComboBox>
    <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
      <lang:LangButton Style="{StaticResource ButtonStyle}" FontSize="11pt" Background="#FF43B5E2" Width="100" Height="26" LangContent="OK" LangKey="K0327" Command="{Binding ClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
    </StackPanel>
  </Grid>
</Window>