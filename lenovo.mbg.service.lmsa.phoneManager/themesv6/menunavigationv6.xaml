<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:generic="clr-namespace:lenovo.themes.generic;assembly=lenovo.themes.generic" xmlns:lang="clr-namespace:lenovo.mbg.service.framework.lang;assembly=lenovo.mbg.service.framework.lang" xmlns:localControls="clr-namespace:lenovo.mbg.service.lmsa.phoneManager.UserControls" xmlns:genericControls="clr-namespace:lenovo.themes.generic.Controls;assembly=lenovo.themes.generic">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/lenovo.themes.generic;component/ThemesV6/GenericStyle.xaml" />
    <ResourceDictionary Source="pack://application:,,,/lenovo.themes.generic;component/ThemesV6/ButtonStyle.xaml" />
    <ResourceDictionary Source="pack://application:,,,/lenovo.themes.generic;component/ThemesV6/DrawingImageStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
  <Style x:Key="v6_TopAlbumTextBoxStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontWeight" Value="Regular" />
  </Style>
  <Style x:Key="v6_TopAlbumListBoxStyle" TargetType="{x:Type ListBox}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <StackPanel Orientation="Vertical">
            <ItemsPresenter />
            <Line DockPanel.Dock="Top" X1="0" Y1="1" Margin="0 -2 0 0" X2="{TemplateBinding FrameworkElement.ActualWidth}" Y2="1" Height="1" Stroke="{StaticResource V6_SplitterBrushKey}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="MinHeight" Value="30" />
          <Setter Property="MinWidth" Value="120" />
          <Setter Property="Foreground" Value="{StaticResource V6_TitleBrushKey}" />
          <Setter Property="BorderBrush" Value="#00FFFFFF" />
          <Setter Property="FontWeight" Value="Regular" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Border Margin="10 0 0 0" BorderThickness="0 0 0 2" BorderBrush="{TemplateBinding Control.BorderBrush}" Cursor="Hand">
                  <ContentPresenter VerticalAlignment="Top" HorizontalAlignment="Center" Margin="15 0 15 0" />
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="ListBoxItem.IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource V6_HighLightBkgBrushKey}" />
                    <Setter Property="BorderBrush" Value="{StaticResource V6_HighLightBkgBrushKey}" />
                    <Setter Property="FontWeight" Value="Medium" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_SearchTextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="Height" Value="28" />
    <Setter Property="MinWidth" Value="171" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Background" Value="{StaticResource V6_SearchBorderBrushKey}" />
    <Setter Property="Foreground" Value="#FF001429" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border CornerRadius="14" Background="{TemplateBinding Control.Background}">
            <Grid Name="border">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Button Grid.Column="0" Command="{TemplateBinding localControls:ControlAttachProperty.LeftClickCommand}" CommandParameter="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}">
                <Control.Template>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <Image Width="13" Margin="10 0 10 0" Source="{StaticResource v6_icon_search}" />
                  </ControlTemplate>
                </Control.Template>
              </Button>
              <lang:LangTextBlock Grid.Column="1" LangText="Search" LangKey="K0486" VerticalAlignment="Center" Foreground="#FF9FAEBF" FontSize="{TemplateBinding Control.FontSize}" Visibility="{Binding Path=Text.IsEmpty, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource bool2VisibilityConverter}}" />
              <ScrollViewer Name="PART_ContentHost" Grid.Column="1" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_MenuTopIconTextboxButtonStyle" TargetType="{x:Type genericControls:IconButton}">
    <Setter Property="MinHeight" Value="14" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{StaticResource V6_ContentBrushKey}" />
    <Setter Property="genericControls:IconButton.Icon" Value="{Binding Icon, RelativeSource={RelativeSource Self}}" />
    <Setter Property="genericControls:IconButton.DisabledIcon" Value="{Binding DisabledIcon, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type genericControls:IconButton}">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5 0 5 0" ToolTip="{TemplateBinding genericControls:IconButton.LangKey}">
            <Image Name="imgIcon" Width="14" Height="14" Margin="10 0 5 0" Source="{TemplateBinding genericControls:IconButton.Icon}" Stretch="UniformToFill" />
            <lang:LangTextBlock LangKey="{TemplateBinding genericControls:IconButton.LangKey}" FontSize="14" VerticalAlignment="Center" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="imgIcon" Property="Image.Source" Value="{Binding DisabledIcon, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter Property="Foreground" Value="{StaticResource V6_DisableBrushKey}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v7_MenuTopIconTextboxButtonStyleForContact" TargetType="{x:Type genericControls:IconButton}">
    <Setter Property="MinHeight" Value="14" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{StaticResource V6_ContentBrushKey}" />
    <Setter Property="genericControls:IconButton.Icon" Value="{Binding Icon, RelativeSource={RelativeSource Self}}" />
    <Setter Property="genericControls:IconButton.DisabledIcon" Value="{Binding DisabledIcon, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type genericControls:IconButton}">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5 0 5 0" ToolTip="{TemplateBinding genericControls:IconButton.LangKey}">
            <Image Name="imgIcon" Width="14" Height="14" Margin="10 0 5 0" Source="{TemplateBinding genericControls:IconButton.Icon}" Stretch="UniformToFill" />
            <lang:LangTextBlock LangKey="{TemplateBinding genericControls:IconButton.LangKey}" FontSize="{TemplateBinding Control.FontSize}" VerticalAlignment="Center" FontStretch="{TemplateBinding Control.FontStretch}" Foreground="{TemplateBinding Control.Foreground}" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="imgIcon" Property="Image.Source" Value="{Binding DisabledIcon, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter Property="Foreground" Value="{StaticResource V6_DisableBrushKey}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v7_MenuTopIconTextboxButtonStyle" TargetType="{x:Type genericControls:IconButton}">
    <Setter Property="MinHeight" Value="14" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{StaticResource V6_ContentBrushKey}" />
    <Setter Property="genericControls:IconButton.Icon" Value="{Binding Icon, RelativeSource={RelativeSource Self}}" />
    <Setter Property="genericControls:IconButton.DisabledIcon" Value="{Binding DisabledIcon, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type genericControls:IconButton}">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5 0 5 0" ToolTip="{TemplateBinding FrameworkElement.ToolTip}">
            <Image Name="imgIcon" Width="20" Height="20" Margin="10 0 5 0" Source="{TemplateBinding genericControls:IconButton.Icon}" Stretch="UniformToFill" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="imgIcon" Property="Image.Source" Value="{Binding DisabledIcon, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter Property="Foreground" Value="{StaticResource V6_DisableBrushKey}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_SimpleScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="{TemplateBinding Control.BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_SimpleSlider" TargetType="{x:Type Slider}">
    <Setter Property="Background" Value="{StaticResource V6_ThemeFgdBrushKey}" />
    <Setter Property="BorderBrush" Value="{StaticResource V6_SearchBorderBrushKey}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Grid Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar Name="TopTick" Visibility="Collapsed" Height="1.5" SnapsToDevicePixels="True" Placement="Top" Fill="{StaticResource V6_ContentBrushKey}" />
            <Border Name="Border" Grid.Row="1" Margin="0" Height="1.5" Background="#80D4DCE3" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" />
            <Track Name="PART_Track" Grid.Row="1">
              <Track.Thumb>
                <Thumb Height="{TemplateBinding FrameworkElement.Height}">
                  <Control.Background>
                    <LinearGradientBrush EndPoint="0.1,0" StartPoint="0.1,0">
                      <GradientStop Color="Black" Offset="0" />
                      <GradientStop Color="White" Offset="1" />
                    </LinearGradientBrush>
                  </Control.Background>
                  <Control.Template>
                    <ControlTemplate>
                      <Image Height="{TemplateBinding FrameworkElement.Height}" Source="{StaticResource v6_icon_music_volume}" />
                    </ControlTemplate>
                  </Control.Template>
                </Thumb>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="Slider.IncreaseLarge" Background="#D2D1D3" Height="2" Style="{StaticResource v6_SimpleScrollRepeatButtonStyle}" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="Slider.DecreaseLarge" Height="2.5" Style="{StaticResource v6_SimpleScrollRepeatButtonStyle}" Background="{StaticResource V6_HighLightBkgBrushKey}" />
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick" Visibility="Collapsed" Grid.Row="2" Height="2" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Control.Foreground}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
              <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource V6_DisableBrushKey}" />
              <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource V6_DisableBrushKey}" />
            </Trigger>
            <Trigger Property="Slider.Orientation" Value="Vertical">
              <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Horizontal" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_leftNavigationStyleOne" TargetType="{x:Type ListBox}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ListBox.SelectionMode" Value="Single" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <StackPanel Name="spListbox" Background="{StaticResource V6_SubThemeBrushKey}">
            <ItemsPresenter VerticalAlignment="Stretch" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <DataTrigger Value="False" Binding="{Binding IsEnabled}">
              <Setter TargetName="spListbox" Property="Panel.Background" Value="{StaticResource V6_DisableBrushKey}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="FrameworkElement.Cursor" Value="Hand" />
          <Setter Property="Height" Value="55" />
          <Setter Property="Background" Value="#00FFFFFF" />
          <Setter Property="IsEnabled" Value="{Binding IsEnable, Mode=TwoWay}" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Border MinHeight="38" Width="155" CornerRadius="20" Background="{TemplateBinding Control.Background}" Height="{Binding ElementName=textBlock, Path=ActualHeight}" Visibility="{Binding ItemVisibility}">
                  <Grid Margin="0 0 7 0" Height="auto" VerticalAlignment="Center">
                    <Image Name="icon" Stretch="Uniform" Margin="20 0 0 0" Width="21" Height="21" VerticalAlignment="Center" HorizontalAlignment="Left" Source="{Binding IconImageSource}" />
                    <Image Name="hoverIcon" Stretch="Uniform" Margin="20 0 0 0" Width="21" Height="21" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Left" Source="{Binding IconHoverImageSource}" />
                    <lang:LangTextBlock Name="textBlock" Foreground="#FF001429" Margin="46 0 0 0" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap" LangText="{Binding Text}" LangKey="{Binding Text}" />
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="ListBoxItem.IsSelected" Value="True">
                    <Setter Property="Background" Value="#786EC2ED" />
                  </Trigger>
                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A6EC2ED" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_ComboxStyleBtn" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border BorderBrush="#00FFFFFF">
            <Image Name="chick_img" Width="10" Height="6" Source="{StaticResource v6_icon_pull_down_without_border}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_ContactComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ComboBoxItem}">
          <Setter Property="Height" Value="28" />
          <Setter Property="MinWidth" Value="70" />
          <Setter Property="FontSize" Value="12" />
          <Setter Property="Foreground" Value="#FF9FAEBF" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                <Border Name="Back" Background="#00FFFFFF" BorderThickness="0,0,0,0" CornerRadius="4" BorderBrush="{StaticResource V6_BorderBrushKey}">
                  <lang:LangTextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" LangText="{Binding .}" LangKey="{Binding .}" />
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FF001429" />
                    <Setter TargetName="Back" Property="Border.Background" Value="#4C9FAEBF" />
                  </Trigger>
                  <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                    <Setter Property="Foreground" Value="#FF001429" />
                    <Setter TargetName="Back" Property="Border.Background" Value="#4C9FAEBF" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid Height="28">
            <Border Name="comboxcontentborder" BorderThickness="1" CornerRadius="4" BorderBrush="{StaticResource V6_BorderBrushKey}" />
            <lang:LangTextBlock FontSize="14" Foreground="#FF001429" LangText="{TemplateBinding ComboBox.Text}" LangKey="{TemplateBinding ComboBox.Text}" VerticalAlignment="Center" Margin="10 0 0 0" />
            <ToggleButton Cursor="Hand" ClickMode="Press" HorizontalAlignment="Right" Margin="0 0 10 0" Style="{StaticResource v6_ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            <Popup Name="Popup" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
              <Border Name="DropDown" Background="#FFFFFFFF" BorderThickness="1" BorderBrush="#FFD4DCE3" CornerRadius="4" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="True">
                <UIElement.Effect>
                  <DropShadowEffect Color="#4C9FAEBF" BlurRadius="2" ShadowDepth="0" Opacity="0.5" />
                </UIElement.Effect>
                <ScrollViewer Margin="0 4" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="#FFFFFFFF" />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="comboxcontentborder" Property="Border.Background" Value="#4C9FAEBF" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
              <Setter TargetName="comboxcontentborder" Property="Border.Background" Value="#00FFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v6_device_defalut_button" BasedOn="{StaticResource V6_NormalBtnStyle}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{StaticResource V6_ContentBrushKey}" />
  </Style>
  <Style x:Key="v7_device_import_button" BasedOn="{StaticResource V6_NormalBtnStyle}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{StaticResource V6_ContentBrushKey}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Padding="14 0" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" CornerRadius="14">
            <StackPanel Orientation="Horizontal">
              <Image Name="imgIcon" Height="13" Width="13" Margin="0 0 5 0" Source="{StaticResource v7_import_button_icon_enable}" />
              <lang:LangTextBlock VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" TextWrapping="Wrap" LangKey="{TemplateBinding ContentControl.Content}" Foreground="{TemplateBinding Control.Foreground}" FontWeight="{TemplateBinding Control.FontWeight}" FontSize="{TemplateBinding Control.FontSize}" TextAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{DynamicResource V6_HoverBkgBrushKey}" Property="Background" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="#FF014B66" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#FF9FAEBF" />
              <Setter Property="Background" Value="#57D4DCE3" />
              <Setter Property="BorderBrush" Value="#FFD4DCE3" />
              <Setter TargetName="imgIcon" Property="Image.Source" Value="{StaticResource v7_import_button_icon_disable}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v7_device_export_button" BasedOn="{StaticResource V6_NormalBtnStyle}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{StaticResource V6_ContentBrushKey}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Padding="14 0" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" CornerRadius="14">
            <StackPanel Orientation="Horizontal">
              <Image Name="imgIcon" Height="13" Width="13" Margin="0 0 5 0" Source="{StaticResource v7_export_button_icon_enable}" />
              <lang:LangTextBlock VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" TextWrapping="Wrap" LangKey="{TemplateBinding ContentControl.Content}" Foreground="{TemplateBinding Control.Foreground}" FontWeight="{TemplateBinding Control.FontWeight}" FontSize="{TemplateBinding Control.FontSize}" TextAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{DynamicResource V6_HoverBkgBrushKey}" Property="Background" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="#FF014B66" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#FF9FAEBF" />
              <Setter Property="Background" Value="#57D4DCE3" />
              <Setter Property="BorderBrush" Value="#FFD4DCE3" />
              <Setter TargetName="imgIcon" Property="Image.Source" Value="{StaticResource v7_export_button_icon_disable}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>