<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="lenovo.mbg.service.lmsa.toolbox.Ringtone.View.RingtoneMakerView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:lenovo.mbg.service.lmsa.toolbox.Ringtone.View" xmlns:convert="clr-namespace:lenovo.mbg.service.lmsa.toolbox.Ringtone.Comm" xmlns:ctrl="clr-namespace:lenovo.mbg.service.lmsa.toolbox.Ringtone.Core" xmlns:cvrt="clr-namespace:lenovo.themes.generic.Converter;assembly=lenovo.themes.generic" xmlns:gifCvrt="clr-namespace:lenovo.mbg.service.lmsa.toolbox.GifMaker.Comm" xmlns:generic="clr-namespace:lenovo.themes.generic;assembly=lenovo.themes.generic" xmlns:lang="clr-namespace:lenovo.mbg.service.framework.lang;assembly=lenovo.mbg.service.framework.lang" Height="560" Width="800" FontSize="11pt" Title="RingtoneMakerView">
  <FrameworkElement.Style>
    <Style TargetType="{x:Type Window}">
      <Setter Property="Window.AllowsTransparency" Value="True" />
      <Setter Property="Background" Value="#00FFFFFF" />
      <Setter Property="Window.ResizeMode" Value="NoResize" />
      <Setter Property="Window.WindowStyle" Value="None" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}">
            <Grid SnapsToDevicePixels="True">
              <Border Background="#43B5E2" CornerRadius="7 7 0 0" VerticalAlignment="Top" Height="216" />
              <Border Background="#FFFFFFFF" CornerRadius="0 0 7 7" VerticalAlignment="Bottom" Height="344" />
              <Grid Background="#FFFFFFFF" Margin="7 0">
                <ContentPresenter />
                <Button Style="{StaticResource WndCloseBtnStyle}" Command="{Binding CloseCommand}" />
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Style>
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <SolidColorBrush x:Key="ThemeBrushKey">#43B5E2</SolidColorBrush>
      <SolidColorBrush x:Key="DefTextBrushKey">#FF494949</SolidColorBrush>
      <SolidColorBrush x:Key="HighlightBrushKey">#FFFFB000</SolidColorBrush>
      <convert:MultiBoolConverter x:Key="MultiBoolConverter" />
      <cvrt:CompareValueConverter x:Key="CompareValueConverter" />
      <gifCvrt:LangStringConverter x:Key="LangStringConverter" />
      <convert:Number2TimeStrConverter x:Key="Number2TimeStrConverter" />
      <Style x:Key="SysNormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ThemeBrushKey}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                <Grid Name="grid" Background="{TemplateBinding Control.Background}">
                  <ContentPresenter Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="#FFB2B1B1" />
                  <Setter Property="BorderBrush" Value="#FFB2B1B1" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SaveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ThemeBrushKey}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                <Grid Name="grid" Background="{TemplateBinding Control.Background}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                  </Grid.ColumnDefinitions>
                  <ContentPresenter Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  <Viewbox Grid.Column="1" Margin="0 10 16 6">
                    <Path Fill="#FFFFFFFF" Data="M0,0 L3.5,4 L7,0" />
                  </Viewbox>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="#FFB2B1B1" />
                  <Setter Property="BorderBrush" Value="#FFB2B1B1" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="{StaticResource DefTextBrushKey}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                <Grid Name="grid" Background="{TemplateBinding Control.Background}">
                  <ContentPresenter Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Background" Value="{StaticResource ThemeBrushKey}" />
                  <Setter Property="Foreground" Value="#FFFFFFFF" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="#FFB2B1B1" />
                  <Setter Property="BorderBrush" Value="#FFB2B1B1" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="IconButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="BorderBrush" Value="#FF0000FF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="BorderBrush" Value="#FF0000FF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SysCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource DefTextBrushKey}" />
        <Setter Property="BorderBrush" Value="#8E8F8F" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type CheckBox}">
              <Grid Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="32" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Margin="8 0">
                  <Path Width="16" Height="16" Stretch="Fill" Fill="{TemplateBinding Control.BorderBrush}" Data="F1 M22,54 L22,22 L54,22 L54,54 L22,54 M26,26 L26,50 L50,50 L50,26 L26,26" />
                  <Path Name="path" Width="10" Height="10" Stretch="Fill" Visibility="Collapsed" Data="F1 M23.7501,33.25 L34.8334,44.3333 L52.2499,22.1668 L56.9999,26.9168 L34.8334,53.8333 L19.0001,38 L23.7501,33.25" Fill="{StaticResource ThemeBrushKey}" />
                </Grid>
                <lang:LangTextBlock Grid.Column="1" VerticalAlignment="Center" LangText="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" LangKey="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                  <Setter TargetName="path" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SysRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{StaticResource DefTextBrushKey}" />
        <Setter Property="BorderBrush" Value="#8E8F8F" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
              <Grid Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="32" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Viewbox>
                  <Grid Width="22" Height="22">
                    <Path StrokeThickness="1" Stroke="{TemplateBinding Control.BorderBrush}" Data="F1 M22,22 M0,0 M11,17.1 C7.7,17.1 5,14.4 5,11.1 C5,7.8 7.7,5.1 11,5.1 C14.3,5.1 17,7.8 17,11.1 C17,14.4 14.3,17.1 11,17.1 M11,5.8 C8.1,5.8 5.8,8.2 5.8,11 C5.8,13.8 8.2,16.2 11,16.2 C13.8,16.2 16.2,13.8 16.2,11 C16.2,8.2 13.9,5.8 11,5.8" />
                    <Path Name="path" Visibility="Collapsed" Fill="{StaticResource ThemeBrushKey}">
                      <Path.Data>
                        <EllipseGeometry RadiusX="2.6" RadiusY="2.6" Center="11,11.1" />
                      </Path.Data>
                    </Path>
                  </Grid>
                </Viewbox>
                <lang:LangTextBlock Grid.Column="1" VerticalAlignment="Center" TextWrapping="Wrap" LangText="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" LangKey="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                  <Setter TargetName="path" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SysTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource DefTextBrushKey}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource DefTextBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource SystemFontKey}" />
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="250" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <ctrl:PlayerCtrl x:Name="player" StartValue="{Binding Start, Mode=TwoWay}" Current="{Binding Current, Mode=TwoWay}" EndValue="{Binding End, Mode=TwoWay}" MaxValue="{Binding Max}" IsPlay="{Binding IsPlay}" IsEnabled="{Binding IsFileOk}" />
    <Grid Row="1" Margin="0 20 0 0">
      <Border Height="40" Width="430" CornerRadius="20" Background="{StaticResource ThemeBrushKey}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="78" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <lang:LangButton Grid.Column="0" LangContent="Set as start" LangKey="K0250" Style="{StaticResource TransparentButtonStyle}" Command="{Binding StartCommand}" IsEnabled="{Binding IsFileOk}" />
          <ToggleButton Grid.Column="1" Width="78" Height="78" Margin="0 -19" Style="{StaticResource IconButtonStyle}" Command="{Binding PlayCommand}" IsChecked="{Binding IsPlay}" IsEnabled="{Binding IsFileOk}">
            <Image Source="{Binding IsPlay, Converter={StaticResource CompareValueConverter}, ConverterParameter=false:/lenovo.mbg.service.lmsa.toolBox;component/Ringtone/Resources/play.png:/lenovo.mbg.service.lmsa.toolBox;component/Ringtone/Resources/stop.png}" />
          </ToggleButton>
          <TextBlock Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontSize="8pt" Margin="0 0 0 -3" Foreground="#FFFFFFFF" IsHitTestVisible="False" Text="{Binding PlayTime, Converter={StaticResource Number2TimeStrConverter}}" />
          <lang:LangButton Grid.Column="2" LangContent="Set as end" LangKey="K0251" Style="{StaticResource TransparentButtonStyle}" Command="{Binding SetEndCommand}" IsEnabled="{Binding IsFileOk}" />
        </Grid>
      </Border>
    </Grid>
    <Grid Row="2" Margin="10 20">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="0.8*" />
        <ColumnDefinition />
        <ColumnDefinition />
        <ColumnDefinition Width="0.8*" />
      </Grid.ColumnDefinitions>
      <lang:LangTextBlock Grid.Row="0" Grid.Column="0" LangText="Selected file: " LangKey="K0243" Style="{StaticResource SysTextStyle}" HorizontalAlignment="Right" />
      <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource SysTextStyle}" Text="{Binding MediaFile, Converter={StaticResource LangStringConverter}, ConverterParameter=38}" ToolTip="{Binding MediaFile}" />
      <lang:LangButton Grid.Row="0" Grid.Column="3" LangContent="Change" LangKey="K0621" Style="{StaticResource SysNormalButtonStyle}" Command="{Binding LoadCommand}" />
      <lang:LangTextBlock Grid.Row="1" Grid.Column="0" LangText="Ringtone type: " LangKey="K0244" Style="{StaticResource SysTextStyle}" HorizontalAlignment="Right" />
      <lang:LangRadioButton Grid.Row="1" Grid.Column="1" Content="Call ringtone" LangKey="K0245" Style="{StaticResource SysRadioButtonStyle}" IsChecked="{Binding IsMessage, Converter={StaticResource CompareValueConverter}, ConverterParameter=true:false:true}" />
      <lang:LangRadioButton Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Content="Notification ringtone" LangKey="K0246" Style="{StaticResource SysRadioButtonStyle}" IsChecked="{Binding IsMessage}" />
      <lang:LangTextBlock Visibility="Collapsed" Grid.Row="2" Grid.Column="0" LangText="Sound setting: " LangKey="K0247" Style="{StaticResource SysTextStyle}" HorizontalAlignment="Right" Margin="0 0 8 0" />
      <CheckBox Visibility="Collapsed" Grid.Row="2" Grid.Column="1" Content="Fade in" Style="{StaticResource SysCheckBoxStyle}" IsChecked="{Binding IsFadein}" />
      <CheckBox Visibility="Collapsed" Grid.Row="2" Grid.Column="2" Content="Fade out" Style="{StaticResource SysCheckBoxStyle}" IsChecked="{Binding IsFadeout}" />
      <lang:LangTextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" TextWrapping="Wrap" Style="{StaticResource SysTextStyle}" Foreground="#FF9600" FontSize="9pt" LangText="{Binding IsMessage, Converter={StaticResource CompareValueConverter}, ConverterParameter=true:Recommend notification ringtone to be less than 20s.:Recommend call ringtone to be less than 40s.}" LangKey="{Binding IsMessage, Converter={StaticResource CompareValueConverter}, ConverterParameter=true:K0774:K0773}" />
      <lang:LangButton Grid.Row="3" Grid.Column="2" LangContent="Set as ringtone" LangKey="K0548" Style="{StaticResource SysNormalButtonStyle}" Width="200" Command="{Binding RingtoneCommand}">
        <UIElement.IsEnabled>
          <MultiBinding Converter="{StaticResource MultiBoolConverter}">
            <Binding Path="IsFileOk" />
            <Binding Path="IsDevOnLine" />
          </MultiBinding>
        </UIElement.IsEnabled>
      </lang:LangButton>
      <lang:LangButton Name="btnSave" Grid.Row="3" Grid.Column="3" LangContent="Save" LangKey="K0230" Style="{StaticResource SaveButtonStyle}" Command="{Binding SelModelCommand}" IsEnabled="{Binding IsFileOk}" />
    </Grid>
    <Popup Name="saveModel" Width="200" Placement="Bottom" IsOpen="False" PlacementTarget="{Binding ElementName=btnSave}">
      <FrameworkElement.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseLeave">
          <BeginStoryboard>
            <Storyboard>
              <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen">
                <DiscreteBooleanKeyFrame KeyTime="00:00:0.001" Value="False" />
              </BooleanAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </FrameworkElement.Triggers>
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>
        <lang:LangButton Grid.Row="0" LangContent="Save to PC" LangKey="K0248" Width="200" Style="{StaticResource ItemButtonStyle}" CommandParameter="PC" Command="{Binding SaveCommand}" />
        <lang:LangButton Grid.Row="1" LangContent="Save to device" LangKey="K0249" Width="200" Style="{StaticResource ItemButtonStyle}" CommandParameter="Phone" Command="{Binding SaveCommand}" IsEnabled="{Binding IsDevOnLine}" />
      </Grid>
    </Popup>
  </Grid>
</Window>