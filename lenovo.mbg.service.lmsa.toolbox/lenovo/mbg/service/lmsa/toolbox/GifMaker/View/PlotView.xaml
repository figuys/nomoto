<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="lenovo.mbg.service.lmsa.toolbox.GifMaker.View.PlotView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:lenovo.mbg.service.lmsa.toolbox.GifMaker.View" xmlns:lang="clr-namespace:lenovo.mbg.service.framework.lang;assembly=lenovo.mbg.service.framework.lang" Height="560" Width="800" Style="{DynamicResource ToolBoxWindowStyle}">
  <UIElement.InputBindings>
    <KeyBinding Gesture="CTRL+Z" Command="{Binding UndoCmd}" />
  </UIElement.InputBindings>
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <DrawingImage x:Key="textDrawingImage11">
        <DrawingImage.Drawing>
          <DrawingGroup ClipGeometry="M0,0 L0,20 L20,20 L20,0 L0,0">
            <DrawingGroup Transform="1,0,0,1,-141,-50">
              <DrawingGroup Transform="1,0,0,1,141,48">
                <DrawingGroup>
                  <GlyphRunDrawing ForegroundBrush="#FF43B5E2">
                    <GlyphRunDrawing.GlyphRun>
                      <GlyphRun BaselineOrigin="3,19" FontRenderingEmSize="20" BidiLevel="0" IsSideways="False" ClusterMap="0" Characters="A" GlyphIndices="36" AdvanceWidths="13.42" GlyphOffsets="0,0" Language="en-us">
                        <GlyphRun.GlyphTypeface>
                          <GlyphTypeface FontUri="C:\WINDOWS\FONTS\SEGUISB.TTF" StyleSimulations="None" />
                        </GlyphRun.GlyphTypeface>
                      </GlyphRun>
                    </GlyphRunDrawing.GlyphRun>
                  </GlyphRunDrawing>
                </DrawingGroup>
                <DrawingGroup>
                  <GlyphRunDrawing ForegroundBrush="#FF43B5E2">
                    <GlyphRunDrawing.GlyphRun>
                      <GlyphRun BaselineOrigin="16.4266666666667,19" FontRenderingEmSize="20" BidiLevel="0" IsSideways="False" CaretStops="1 1" ClusterMap="0" Characters=" " GlyphIndices="3" AdvanceWidths="5.5" GlyphOffsets="0,0" Language="en-us">
                        <GlyphRun.GlyphTypeface>
                          <GlyphTypeface FontUri="C:\WINDOWS\FONTS\SEGUISB.TTF" StyleSimulations="None" />
                        </GlyphRun.GlyphTypeface>
                      </GlyphRun>
                    </GlyphRunDrawing.GlyphRun>
                  </GlyphRunDrawing>
                </DrawingGroup>
              </DrawingGroup>
            </DrawingGroup>
          </DrawingGroup>
        </DrawingImage.Drawing>
      </DrawingImage>
      <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="ToolTip.HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="ToolTip.Placement" Value="MousePoint" />
        <Setter Property="ToolTip.VerticalOffset" Value="10" />
        <Setter Property="ToolTip.HorizontalOffset" Value="15" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToolTip}">
              <Border Name="bg" Background="#efefef" Padding="10 8 10 8" CornerRadius="4" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                <TextBlock Foreground="#494949" Text="{TemplateBinding ContentControl.Content}" Width="auto" Height="auto" TextWrapping="Wrap" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="BorderBrush" Value="#FF000000" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="TextBoxBase.AcceptsReturn" Value="True" />
        <Setter Property="TextBox.TextWrapping" Value="Wrap" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Grid Background="{TemplateBinding Control.Background}">
                <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Top" Margin="0 10" MinHeight="20" Height="{TemplateBinding FrameworkElement.Height}">
                  <Control.Template>
                    <ControlTemplate>
                      <ScrollContentPresenter Content="{TemplateBinding ContentControl.Content}" CanContentScroll="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="0" />
                    </ControlTemplate>
                  </Control.Template>
                </ScrollViewer>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="#FFDBDCDE" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ButtonBase.ClickMode" Value="Press" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}" Triggers="">
              <Grid Background="#00FFFFFF" SnapsToDevicePixels="True">
                <ContentPresenter />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <ControlTemplate x:Key="ZoomComboxTemplateKey" TargetType="{x:Type ComboBox}">
        <Grid Name="MainGrid" SnapsToDevicePixels="True">
          <Popup Name="PART_Popup" AllowsTransparency="True" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Width="{Binding ElementName=MainGrid, Path=ActualWidth}" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
            <Border Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
              <ScrollViewer Name="DropDownScrollViewer">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                  </Canvas>
                  <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Grid>
              </ScrollViewer>
            </Border>
          </Popup>
          <ToggleButton Name="TBtn" Height="20" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" Style="{StaticResource ComboBoxReadonlyToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentStringFormat="{}{0}%" HorizontalAlignment="Center" IsHitTestVisible="False" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
          </ToggleButton>
          <Line X1="0" StrokeThickness="4" StrokeDashArray="1 1" Stroke="{StaticResource ThemeBrushKey}" Y1="{Binding ElementName=TBtn, Path=ActualHeight}" X2="{Binding ElementName=MainGrid, Path=ActualWidth}" Y2="{Binding ElementName=TBtn, Path=ActualHeight}" />
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="ItemsControl.HasItems" Value="False">
            <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
          </Trigger>
          <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            <Setter Property="Control.Background" Value="#FFF4F4F4" />
          </Trigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="ItemsControl.IsGrouping" Value="True" />
              <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
            </MultiTrigger.Conditions>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
          </MultiTrigger>
          <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      <ControlTemplate x:Key="LineComboxTemplateKey" TargetType="{x:Type ComboBox}">
        <Grid Name="MainGrid" SnapsToDevicePixels="True">
          <Popup Name="PART_Popup" AllowsTransparency="True" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Width="{Binding ElementName=MainGrid, Path=ActualWidth}" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
            <Border Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
              <ScrollViewer Name="DropDownScrollViewer">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                  </Canvas>
                  <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Grid>
              </ScrollViewer>
            </Border>
          </Popup>
          <ToggleButton Name="TBtn" Height="20" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" Style="{StaticResource ComboBoxReadonlyToggleButton}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" HorizontalAlignment="Center" IsHitTestVisible="False" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
          </ToggleButton>
          <Line X1="0" StrokeThickness="4" StrokeDashArray="1 1" Stroke="{StaticResource ThemeBrushKey}" Y1="{Binding ElementName=TBtn, Path=ActualHeight}" X2="{Binding ElementName=MainGrid, Path=ActualWidth}" Y2="{Binding ElementName=TBtn, Path=ActualHeight}" />
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="ItemsControl.HasItems" Value="False">
            <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
          </Trigger>
          <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            <Setter Property="Control.Background" Value="#FFF4F4F4" />
          </Trigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="ItemsControl.IsGrouping" Value="True" />
              <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
            </MultiTrigger.Conditions>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
          </MultiTrigger>
          <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <ScrollViewer Margin="20 0" Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Style="{StaticResource CustemScrollViewer}">
      <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
        <FrameworkElement.Width>
          <MultiBinding Converter="{StaticResource ZoomConverter}">
            <Binding Path="Model.DisplayImage.PixelWidth" />
            <Binding Path="Model.Scale" />
          </MultiBinding>
        </FrameworkElement.Width>
        <FrameworkElement.Height>
          <MultiBinding Converter="{StaticResource ZoomConverter}">
            <Binding Path="Model.DisplayImage.PixelHeight" />
            <Binding Path="Model.Scale" />
          </MultiBinding>
        </FrameworkElement.Height>
        <Image Stretch="UniformToFill" Source="{Binding Model.DisplayImage}" />
        <Canvas Name="canvas" Background="#00FFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5, 0.5" Cursor="{Binding Model.Cursor}" Width="{Binding Model.DisplayImage.PixelWidth}" Height="{Binding Model.DisplayImage.PixelHeight}">
          <UIElement.RenderTransform>
            <ScaleTransform x:Name="scale" ScaleX="{Binding Model.Scale}" ScaleY="{Binding Model.Scale}" />
          </UIElement.RenderTransform>
        </Canvas>
      </Grid>
    </ScrollViewer>
    <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">
      <RadioButton Margin="5 10" Width="50" CommandParameter="ELLIPSE" ToolTip="Ellipse" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                  <Grid>
                    <Image Source="{StaticResource ellipseDrawingImage}" Stretch="Uniform" Width="24" Height="20" />
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </RadioButton>
      <RadioButton Margin="5 10" Width="50" CommandParameter="LINE" ToolTip="Line" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                  <Grid>
                    <Image Source="{StaticResource lineDrawingImage}" Stretch="Uniform" Width="24" Height="20" />
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </RadioButton>
      <RadioButton Margin="5 10" Width="50" CommandParameter="RECT" ToolTip="Rectangle" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                  <Grid>
                    <Image Source="{StaticResource rectDrawingImage}" Stretch="Uniform" Width="24" Height="20" />
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </RadioButton>
      <RadioButton Margin="5 10" Width="50" CommandParameter="TEXT" ToolTip="Text" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                  <Grid>
                    <Image Source="{StaticResource textDrawingImage11}" Stretch="Uniform" Width="24" Height="20" />
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </RadioButton>
      <RadioButton Margin="5 10" Width="50" CommandParameter="CUT" ToolTip="Cut" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                  <Grid>
                    <Image Source="{StaticResource cutDrawingImage}" Stretch="Uniform" Width="24" Height="20" />
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </RadioButton>
      <Button Margin="5 10" Width="50" ToolTip="Zoom">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                    <ComboBox Width="50" Height="20" Foreground="{StaticResource ThemeBrushKey}" FontSize="14" FontWeight="Bold" Template="{StaticResource ZoomComboxTemplateKey}" ItemsSource="{Binding Model.ZoomArr}" SelectedValue="{Binding Model.Zoom}">
                      <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Name="Bd">
                                  <lang:LangTextBlock Name="txt" FontSize="12" FontWeight="Normal" Foreground="{StaticResource ThemeBrushKey}" Margin="0 2" LangText="{Binding ., StringFormat={}{0}%}" LangKey="{Binding ., StringFormat={}{0}%}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Value="{StaticResource ThemeBrushKey}" Property="Border.Background" />
                                    <Setter TargetName="txt" Property="TextBlock.Foreground" Value="#FFFFFFFF" />
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </ItemsControl.ItemContainerStyle>
                    </ComboBox>
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" IsHitTestVisible="False" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </Button>
      <Button Margin="5 10" Width="50" ToolTip="Line Weight">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                    <ComboBox Width="50" Height="20" Foreground="{StaticResource ThemeBrushKey}" FontSize="14" FontWeight="Bold" Template="{StaticResource LineComboxTemplateKey}" ItemsSource="{Binding Model.LineArr}" SelectedValue="{Binding Model.Settings.LineWeight}">
                      <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                                  <StackPanel Orientation="Horizontal" Margin="0 2">
                                    <lang:LangTextBlock FontSize="12" FontWeight="Normal" LangText="{Binding .}" LangKey="{Binding .}" />
                                    <Line Name="line" X1="5" Y1="2" X2="25" Y2="2" Stroke="{StaticResource ThemeBrushKey}" VerticalAlignment="Center" StrokeThickness="{Binding .}" />
                                  </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Value="{StaticResource ThemeBrushKey}" Property="Border.Background" />
                                    <Setter TargetName="line" Property="Shape.Stroke" Value="#FFFFFFFF" />
                                    <Setter Property="Foreground" Value="#FFFFFFFF" />
                                  </Trigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </ItemsControl.ItemContainerStyle>
                    </ComboBox>
                    <Rectangle Name="mask" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" IsHitTestVisible="False" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </Button>
      <Button Margin="5 10" Width="50" CommandParameter="FONT" ToolTip="Font" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                    <Image Source="{StaticResource fontDrawingImage}" Stretch="Uniform" Width="24" Height="20" />
                    <Rectangle Name="mask" Grid.RowSpan="2" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </Button>
      <Button Margin="5 10" Width="50" CommandParameter="COLOR" ToolTip="Color" Command="{Binding ToolBarItemCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                    <Rectangle Width="24" Height="20" Fill="{Binding Model.Settings.Color, Converter={StaticResource Color2BrushConverter}}" />
                    <Rectangle Name="mask" Grid.RowSpan="2" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </Button>
      <Button Margin="5 10" Width="50" ToolTip="Undo" Command="{Binding UndoCmd}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                    <Grid Width="24" Height="20">
                      <Path Stretch="Uniform" Stroke="{StaticResource ThemeBrushKey}" Data="F1 M14,14 M0,0 M4.1,6.2 C4,6.2 3.9,6.2 3.8,6.1 L1.9,3.8 C1.8,3.7 1.8,3.5 2,3.3 L4,1.5 C4.2,1.4 4.4,1.4 4.5,1.5 C4.6,1.7 4.6,1.9 4.5,2 L2.7,3.6 L4.3,5.5 C4.4,5.7 4.4,5.9 4.3,6 C4.3,6.2 4.2,6.2 4.1,6.2" />
                      <Path Stretch="Uniform" Stroke="{StaticResource ThemeBrushKey}" Data="F1 M14,14 M0,0 M2.7,12.2 C2.5,12.2 2.3,12 2.3,11.8 C2.3,11.6 2.5,11.4 2.7,11.4 L8.5,11.4 C8.6,11.4 11.6,11.3 11.6,8 C11.6,4.5 8.6,4 8.6,4 L2.7,4 C2.5,4 2.3,3.9 2.3,3.6 C2.3,3.3 2.5,3.2 2.7,3.2 L8.6,3.2 C9.1,3.2 12.3,4.1 12.3,7.9 C12.3,11.9 8.5,12.1 8.5,12.1 L2.7,12.1" />
                    </Grid>
                    <Rectangle Name="mask" Grid.RowSpan="2" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </Button>
      <ToggleButton Margin="5 10" Width="50" Command="{Binding ChangeSizeCmd}" CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.ToolTip" Value="Maximize" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                  <Grid>
                    <Grid Width="24" Height="20">
                      <Path Name="max" Width="18" Height="18" Stretch="Uniform" Fill="{StaticResource ThemeBrushKey}" Data="F1 M43,48 L46,48 L46,57 L19,57 L19,34 L32,34 L32,40 L22,40 L22,54 L43,54 L43,48 M21,19 L57,19 L57,50 L49,50 L49,46 L53,46 L53,27 L25,27 L25,32 L21,32 L21,19 M37.75,30 L50,30 L50,42.25 L46,46.25 L46,37.25 L38,45.25 L34.75,42 L42.75,34 L33.75,34 L37.75,30" />
                      <Path Name="restore" Width="18" Height="18" Visibility="Collapsed" Stretch="Uniform" Fill="{StaticResource ThemeBrushKey}" Data="F1 M54,54 L54,40 L33,40 L33,54 L54,54 M57,34 L57,57 L30,57 L30,34 L57,34 M43,25 L22,25 L22,39 L27,39 L27,42 L19,42 L19,19 L46,19 L46,31 L43,31 L43,25" />
                    </Grid>
                    <Rectangle Name="mask" Grid.RowSpan="2" Fill="{StaticResource ThemeBrushKey}" Opacity="0.2" Visibility="Collapsed" />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="max" Property="Visibility" Value="Collapsed" />
                      <Setter TargetName="restore" Property="Visibility" Value="Visible" />
                      <Setter Property="FrameworkElement.ToolTip" Value="Minimize" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </ToggleButton>
    </StackPanel>
    <lang:LangButton Grid.Row="2" LangContent="Save" LangKey="K0230" Style="{StaticResource ToolBoxBlueBtnStyle}" Height="22" Margin="0 10 0 20" Command="{Binding SaveImageCmd}" />
  </Grid>
</Window>