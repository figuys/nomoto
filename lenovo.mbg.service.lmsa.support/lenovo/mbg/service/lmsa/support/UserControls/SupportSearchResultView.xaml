<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="lenovo.mbg.service.lmsa.support.UserControls.SupportSearchResultView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:lenovo.mbg.service.lmsa.support.UserControls" xmlns:viewMode="clr-namespace:lenovo.mbg.service.lmsa.support.ViewModel" xmlns:lang="clr-namespace:lenovo.mbg.service.framework.lang;assembly=lenovo.mbg.service.framework.lang" xmlns:genericControls="clr-namespace:lenovo.themes.generic.Controls;assembly=lenovo.themes.generic" xmlns:genericConverter="clr-namespace:lenovo.themes.generic.Converter;assembly=lenovo.themes.generic" Background="#f7f9fc" Loaded="UserControl_Loaded">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <local:OpacityConvert x:Key="opacityConvert" />
      <local:TitleIconConvert x:Key="titleIconConvert" />
      <local:WarrantyInfoVisbleConvert1 x:Key="warrantyInfoVisbleConvert" />
      <local:IMEI000000000000000Convert x:Key="iMEI000000000000000Convert" />
      <Style x:Key="DefaultScrollBarTrackButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
              <Border Background="#00FFFFFF" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <ControlTemplate x:Key="DefaultThumbTemplate" TargetType="{x:Type Thumb}">
        <Border Name="Bg" Margin="0" CornerRadius="5" Background="#9FAEBF" SnapsToDevicePixels="True" />
      </ControlTemplate>
      <ControlTemplate x:Key="HorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Grid Name="RootContainerView" Height="7" Width="{TemplateBinding FrameworkElement.Width}">
          <Border Name="BgInner" SnapsToDevicePixels="True" CornerRadius="3" Background="#00FFFFFF" Height="5px" />
          <Track Name="PART_Track" IsDirectionReversed="False">
            <Track.DecreaseRepeatButton>
              <RepeatButton Name="HorizontalLargeDecrease" Command="ScrollBar.PageLeftCommand" IsTabStop="False" Interval="50" Style="{StaticResource DefaultScrollBarTrackButton}" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb Margin="0" Template="{StaticResource DefaultThumbTemplate}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton Name="HorizontalLargeIncrease" Command="ScrollBar.PageRightCommand" IsTabStop="False" Interval="50" Style="{StaticResource DefaultScrollBarTrackButton}" />
            </Track.IncreaseRepeatButton>
          </Track>
        </Grid>
      </ControlTemplate>
      <ControlTemplate x:Key="VerticalSocrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Grid Height="{TemplateBinding FrameworkElement.Height}" Width="4">
          <Border Name="BgInner" SnapsToDevicePixels="True" Width="5" CornerRadius="3" Background="#00FFFFFF" />
          <Track Name="PART_Track" IsDirectionReversed="True">
            <Track.DecreaseRepeatButton>
              <RepeatButton Name="HorizontalLargeDecrease" Command="ScrollBar.PageLeftCommand" IsTabStop="False" Interval="50" Style="{StaticResource DefaultScrollBarTrackButton}" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb MinHeight="10" Template="{StaticResource DefaultThumbTemplate}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton Name="HorizontalLargeIncrease" Command="ScrollBar.PageLeftCommand" IsTabStop="False" Interval="50" Style="{StaticResource DefaultScrollBarTrackButton}" />
            </Track.IncreaseRepeatButton>
          </Track>
        </Grid>
      </ControlTemplate>
      <Style x:Key="CommonScrollViewerStyle1" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}" Triggers="">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" />
                <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Template="{StaticResource VerticalSocrollBarStyle}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <ScrollBar Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Template="{StaticResource HorizontalScrollBarStyle}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="#ffffff" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border Name="border" Background="#ffffff" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                <Path Name="path" Data="M9,10 C8.74985495,10 8.51015943,9.90025852 8.33506202,9.72325825 L0.266106243,1.56781959 C-0.0938338404,1.20407132 -0.08786604,0.620149704 0.279375046,0.263633628 C0.646584399,-0.092850983 1.23609383,-0.087002332 1.59597042,0.276777367 L9,7.7601559 L16.4040178,0.276777367 C16.7638944,-0.0870337977 17.3533403,-0.0929767842 17.7206132,0.263633628 C18.0878861,0.620181139 18.0938221,1.20407132 17.733882,1.56781959 L9.6649262,9.72325825 C9.48982879,9.90025852 9.25016503,10 9,10" Stretch="Fill" Stroke="#345375" Margin="0,0.438,0,0" RenderTransformOrigin="0.5,0.5" Fill="{x:Null}">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="180" />
                      <TranslateTransform />
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Path>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="False">
                  <Setter TargetName="path" Property="RenderTransform">
                    <Setter.Value>
                      <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                      </TransformGroup>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
      <genericConverter:StringIsNullOrEmptyToVisibilityConverter x:Key="stringIsNullOrEmptyToVisibilityConverter" />
      <viewMode:ListItemDataTemplateSelector x:Key="listItemDataTemplateSelector" />
      <DataTemplate x:Key="lenovoDataTemplate">
        <Grid Name="grid_main">
          <DockPanel VerticalAlignment="Top">
            <DockPanel Dock="Top" Height="170" Margin="20 -30 0 0">
              <Border DockPanel.Dock="Left">
                <Image Name="img" Stretch="Fill" Height="94" Width="44" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50 0 30 30" Source="{StaticResource DeviceBigIconBitmapImage1}" />
              </Border>
              <StackPanel VerticalAlignment="Center" Margin="0 24 0 12">
                <TextBlock FontSize="18px" Foreground="#FF001429" TextWrapping="Wrap" Text="{Binding ProductName}" />
                <StackPanel Orientation="Horizontal" Margin="0 12 0 0">
                  <TextBlock Margin="0 0 20 0">
                    <lang:LangRun FontSize="14px" Foreground="#FF001429" LangText="Serial number" LangKey="K0268" /> <Run FontSize="14px" Foreground="#FF001429" Text=":" /> <Run FontSize="14px" Foreground="#FF001429" Text="{Binding SerialNumber, Converter={StaticResource iMEI000000000000000Convert}}" /></TextBlock>
                  <Button Name="copyBtn" Margin="-15,0,80,0" Width="16" Height="16" Style="{DynamicResource V6_CopyIconBtnStyle}" Command="{Binding CopyCommand}" CommandParameter="{Binding SerialNumber}" />
                  <Popup UseLayoutRounding="True" AllowsTransparency="True" StaysOpen="True" HorizontalOffset="20" VerticalOffset="-18" Panel.ZIndex="100" IsOpen="{Binding CopiedSNVisibility}" PlacementTarget="{Binding ElementName=copyBtn}">
                    <Grid>
                      <Border Padding="8 3" Background="#E8E9F3" BorderThickness="0" CornerRadius="8">
                        <lang:LangTextBlock LangText="Copied" LangKey="K0465" FontSize="12" Foreground="#8E8E8E" VerticalAlignment="Center" />
                      </Border>
                    </Grid>
                  </Popup>
                  <TextBlock Margin="0 0 20 0">
                    <lang:LangRun FontSize="14px" Foreground="#FF001429" LangText="Model" LangKey="K0076" /> <Run FontSize="14px" Foreground="#FF001429" Text=":" /> <Run FontSize="14px" Foreground="#FF001429" Text="{Binding Model}" /></TextBlock>
                </StackPanel>
                <TextBlock Margin="0 12 20 0">
                  <lang:LangRun FontSize="14px" Foreground="#FF001429" LangText="Ship-to location" LangKey="K0270" /> <Run FontSize="14px" Foreground="#FF001429" Text=":" /> <Run FontSize="14px" Foreground="#FF001429" Text="{Binding ShipTlLocation}" /></TextBlock>
              </StackPanel>
            </DockPanel>
            <lang:LangTextBlock DockPanel.Dock="Top" LangText="Warranty status" LangKey="K0273" Margin="70 0 0 10" FontSize="18px" Foreground="#FF001429" Visibility="{Binding WarrantyStatusItemViewModel, Converter={StaticResource warrantyInfoVisbleConvert}}" />
            <Border CornerRadius="10" DockPanel.Dock="Top" Background="#FFFFFFFF" BorderBrush="#FF808080" BorderThickness="0.5" Margin="70,0,70,20" Visibility="{Binding WarrantyStatusItemViewModel, Converter={StaticResource warrantyInfoVisbleConvert}}">
              <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                  <lang:LangTextBlock Margin="50 20 0 0" HorizontalAlignment="Left" LangText="Expiration date" LangKey="K0274" FontSize="14px" Foreground="#FF001429" />
                  <lang:LangTextBlock Margin="95 20 0 0" HorizontalAlignment="Left" LangText="Authentication information" LangKey="K1426" FontSize="14px" Foreground="#FF001429" />
                </StackPanel>
                <ListBox Margin="40 10 0 0" ScrollViewer.CanContentScroll="False" ItemTemplateSelector="{DynamicResource listItemDataTemplateSelector}" ItemsSource="{Binding WarrantyStatusItemViewModel}">
                  <Control.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                      <ScrollViewer Style="{DynamicResource CommonScrollViewerStyle1}" HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsItemsHost="True" Margin="20" />
                      </ScrollViewer>
                    </ControlTemplate>
                  </Control.Template>
                  <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border BorderThickness="0" Margin="0" Padding="0">
                              <ContentPresenter />
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </ItemsControl.ItemContainerStyle>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Grid Name="grid_deatil" Background="#00FFFFFF">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="140" />
                          <ColumnDefinition Width="auto" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="auto" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                          <Image Source="{Binding SubTitle, Converter={StaticResource titleIconConvert}}" />
                          <TextBlock Margin="10,0,0,0" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14px" Foreground="#FF001429" Opacity="{Binding GroupExpanded, Converter={StaticResource opacityConvert}}" Text="{Binding StopDate, StringFormat={}{0:MMM d yyyy}}" />
                        </StackPanel>
                        <Line Name="longLine" Margin="0,-20,0,0" Grid.Column="1" Grid.Row="1" Stroke="#FFD4DCE3" HorizontalAlignment="Center" StrokeDashArray="7 0" StrokeThickness="3" X1="1.5" X2="1.5" Y1="0" Y2="1" VerticalAlignment="Stretch" Stretch="Uniform" Visibility="Collapsed" />
                        <Line Name="shortLine" Grid.Column="1" Grid.Row="1" Stroke="#FFD4DCE3" HorizontalAlignment="Center" StrokeDashArray="7 0" StrokeThickness="3" X1="1.5" X2="1.5" Y1="0" Y2="60" Margin="0,-20,0,0" Visibility="Collapsed" />
                        <Image Name="statusImage" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" Stretch="Fill" Width="23" Height="23" Source="{StaticResource warrantyCorrectBitmapImage}" Opacity="{Binding GroupExpanded, Converter={StaticResource opacityConvert}}" />
                        <lang:LangTextBlock Grid.Column="2" Grid.Row="0" FontSize="14px" Foreground="#FF001429" TextWrapping="Wrap" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30 0 0 0" Opacity="{Binding GroupExpanded, Converter={StaticResource opacityConvert}}" LangText="{Binding SubTitle}" LangKey="{Binding SubTitle}" />
                        <StackPanel Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" Margin="30 0 0 0">
                          <StackPanel Name="propertyContentStackPanel" Background="#f1f4f6" Visibility="Collapsed">
                            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                              <TextBlock Margin="10,0,0,0" MinWidth="230" FontSize="14px" Foreground="#FF001429">
                                <lang:LangRun LangText="Start date" LangKey="K0276" /> <Run Text=":" /> <Run Text="{Binding StartDate, StringFormat={}{0:MMM d yyyy}}" /></TextBlock>
                              <TextBlock Margin="10,0,0,0" MinWidth="200" FontSize="14px" Foreground="#FF001429">
                                <lang:LangRun LangText="Days remaining" LangKey="K0275" /> <Run Text=":" /> <Run Text="{Binding DaysRemaining}" /></TextBlock>
                            </StackPanel>
                            <TextBlock Margin="10,3,0,0" MinWidth="230" FontSize="14px" Foreground="#FF001429">
                              <lang:LangRun LangText="End date" LangKey="End date" /> <Run Text=":" /> <Run Text="{Binding StopDate, StringFormat={}{0:MMM d yyyy}}" /></TextBlock>
                            <TextBlock Margin="10 20 0 0" LineHeight="25" TextWrapping="Wrap" FontSize="14px" Foreground="#FF001429" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" Text="{Binding Description}" />
                          </StackPanel>
                          <Line Stroke="#FFD4DCE3" VerticalAlignment="Center" Margin="0 0 0 25" X1="0" Y1="1.5" X2="1" Y2="1.5" Stretch="Uniform" StrokeThickness="1" />
                        </StackPanel>
                        <ToggleButton Name="btnGroupToggleButton" Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="10" Style="{DynamicResource ToggleButtonStyle1}" IsChecked="{Binding GroupExpanded}" />
                      </Grid>
                      <DataTemplate.Triggers>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Value="true" Binding="{Binding IsChecked, ElementName=btnGroupToggleButton}" />
                            <Condition Value="true" Binding="{Binding IsShowDottedLine}" />
                          </MultiDataTrigger.Conditions>
                          <Setter TargetName="longLine" Property="UIElement.Visibility" Value="Visible" />
                          <Setter TargetName="shortLine" Property="UIElement.Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Value="false" Binding="{Binding IsChecked, ElementName=btnGroupToggleButton}" />
                            <Condition Value="true" Binding="{Binding IsShowDottedLine}" />
                          </MultiDataTrigger.Conditions>
                          <Setter TargetName="longLine" Property="UIElement.Visibility" Value="Collapsed" />
                          <Setter TargetName="shortLine" Property="UIElement.Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <DataTrigger Value="true" Binding="{Binding IsChecked, ElementName=btnGroupToggleButton}">
                          <Setter TargetName="propertyContentStackPanel" Property="UIElement.Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="Active" Binding="{Binding IconType}">
                          <Setter TargetName="statusImage" Property="Image.Source" Value="{StaticResource warrantyCorrectBitmapImage}" />
                        </DataTrigger>
                        <DataTrigger Value="Warn" Binding="{Binding IconType}">
                          <Setter TargetName="statusImage" Property="Image.Source" Value="{StaticResource warrantyWarnBitmapImage}" />
                        </DataTrigger>
                        <DataTrigger Value="Expired" Binding="{Binding IconType}">
                          <Setter TargetName="statusImage" Property="Image.Source" Value="{StaticResource warrantyErrorBitmapImage}" />
                        </DataTrigger>
                      </DataTemplate.Triggers>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ListBox>
              </DockPanel>
            </Border>
          </DockPanel>
          <Border BorderBrush="#FFE8EDF3" BorderThickness="0,1,0,1" Margin="0,0,0,3" />
        </Grid>
        <DataTemplate.Triggers>
          <DataTrigger Value="TABLET" Binding="{Binding Brand}">
            <Setter TargetName="img" Property="Image.Source" Value="{StaticResource DeviceTabeltImage1}" />
            <Setter TargetName="img" Property="FrameworkElement.Height" Value="98" />
            <Setter TargetName="img" Property="FrameworkElement.Width" Value="78" />
          </DataTrigger>
          <DataTrigger Value="SMART" Binding="{Binding Brand}">
            <Setter TargetName="img" Property="Image.Source" Value="{StaticResource DeviceSmartImage1}" />
            <Setter TargetName="img" Property="FrameworkElement.Height" Value="55" />
            <Setter TargetName="img" Property="FrameworkElement.Width" Value="81" />
            <Setter TargetName="img" Property="FrameworkElement.Margin" Value="50 0 30 50" />
          </DataTrigger>
        </DataTemplate.Triggers>
      </DataTemplate>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <ContentPresenter ContentTemplateSelector="{DynamicResource listItemDataTemplateSelector}" Content="{Binding}" />
</UserControl>