<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="lenovo.themes.generic.Controls.UserControl1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:lenovo.themes.generic.Controls" xmlns:localRoot="clr-namespace:lenovo.themes.generic" x:Name="windowRoot" Background="#00FFFFFF">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
      <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
      <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
      <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
      <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
      <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
      <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
      <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
      <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
      <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                <Path Name="path" Data="M1.0619908,17.99984 L10.866506,1.986343 L20.998003,17.999665" Stretch="Fill" Stroke="#FF787676" Margin="0,0.438,0,0" RenderTransformOrigin="0.5,0.5" Fill="{x:Null}">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform />
                      <TranslateTransform />
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Path>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked" Value="False">
                  <Setter TargetName="path" Property="RenderTransform">
                    <Setter.Value>
                      <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="180.000" />
                        <TranslateTransform />
                      </TransformGroup>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="Button.IsDefaulted" Value="True">
                  <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.MouseOver.Background}" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Pressed.Background}" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Disabled.Background}" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid Background="#FFFFFFFF">
    <ToggleButton Name="toggleButton" Margin="2.125,6.5,0,2.884" Style="{DynamicResource ToggleButtonStyle1}" />
  </Grid>
</UserControl>