<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary x:Class="lenovo.themes.generic.ControlsV6.ItemRequestBringIntoView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors" xmlns:lc6="clr-namespace:lenovo.themes.generic.ControlsV6" xmlns:lvm6="clr-namespace:lenovo.themes.generic.ViewModelV6">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/lenovo.themes.generic;component/ThemesV6/CheckBoxStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="v6_treeviewitem_style" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="0 2" />
    <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
    <Setter Property="TreeViewItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid Visibility="{Binding IsFolder, Converter={StaticResource v6_BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" MinHeight="25" UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <Grid Margin="{TemplateBinding FrameworkElement.Margin}" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton Name="ExpanderBtn" Margin="{TemplateBinding FrameworkElement.Margin}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}">
                  <Control.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                      <Border VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20">
                        <Image Name="ExpanderIcon" Width="12" Height="12" Stretch="Fill" Source="{DynamicResource v6_icon_right}" RenderTransformOrigin="0.5,0.5" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <DataTrigger Value="true" Binding="{Binding IsExpanded}">
                          <Setter TargetName="ExpanderIcon" Property="RenderTransform">
                            <Setter.Value>
                              <RotateTransform Angle="90" />
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Control.Template>
                </ToggleButton>
                <Border Name="Bd" Grid.Column="1">
                  <ContentPresenter Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                </Border>
              </Grid>
            </Border>
            <ItemsPresenter Name="ItemsHost" Grid.Row="1" Margin="12,0,0,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Value="False" Binding="{Binding IsFolder}">
              <Setter TargetName="ExpanderBtn" Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <Trigger SourceName="PART_Header" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="#F2F4F6" />
              <Setter Property="Foreground" Value="#001429" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="#F2F4F6" />
              <Setter Property="Foreground" Value="#001429" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="#F2F4F6" />
              <Setter Property="Foreground" Value="#001429" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <EventSetter Event="RequestBringIntoView" Handler="Item_RequestBringIntoView" />
  </Style>
  <HierarchicalDataTemplate x:Key="v6_treeviewitem_template" DataType="lvm6:TreeViewModel" ItemsSource="{Binding Childrens}">
    <Grid Height="28">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Border Visibility="{Binding Image, Converter={StaticResource v6_NullOrEmptyToVisibleConverter}}">
        <Image Width="16" Source="{Binding Image}" />
      </Border>
      <TextBlock Grid.Column="1" Foreground="#001429" FontSize="12" FontWeight="Regular" VerticalAlignment="Center" Margin="3,0,0,0" Text="{Binding Name}">
        <FrameworkElement.ToolTip>
          <ToolTip>
            <Control.Template>
              <ControlTemplate TargetType="{x:Type ToolTip}">
                <Border Background="#001429" Padding="5 3" CornerRadius="4" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Visibility="{Binding Path=(lc6:ControlAttachPropertyV6.CommVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                  <TextBlock VerticalAlignment="Center" Foreground="#FFFFFF" FontSize="12" Text="{Binding Name}" />
                </Border>
              </ControlTemplate>
            </Control.Template>
          </ToolTip>
        </FrameworkElement.ToolTip>
      </TextBlock>
    </Grid>
  </HierarchicalDataTemplate>
  <Style x:Key="v6_treeview" TargetType="{x:Type TreeView}">
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource v6_treeviewitem_style}" />
    <Setter Property="ItemTemplate" Value="{StaticResource v6_treeviewitem_template}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsItemsHost="True" Margin="3 0 0 0" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="v7_treeviewitem_style" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Foreground" Value="#FF000000" />
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="0,2" />
    <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
    <Setter Property="TreeViewItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid Visibility="{Binding IsFolder, Converter={StaticResource v6_BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
              <RowDefinition Height="45" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Border Name="Bd1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="10,0,0,10" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" MinHeight="25" UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <Grid Margin="{TemplateBinding FrameworkElement.Margin}" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="35" />
                </Grid.ColumnDefinitions>
                <ToggleButton Name="ExpanderBtn" Margin="{TemplateBinding FrameworkElement.Margin}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" Visibility="{Binding IsVisible}">
                  <Control.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                      <Border VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20">
                        <Image Name="ExpanderIcon" Width="12" Height="12" Stretch="Fill" Source="{DynamicResource v6_icon_right}" RenderTransformOrigin="0.5,0.5" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <DataTrigger Value="true" Binding="{Binding IsExpanded}">
                          <Setter TargetName="ExpanderIcon" Property="RenderTransform">
                            <Setter.Value>
                              <RotateTransform Angle="90" />
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Control.Template>
                </ToggleButton>
                <Border Name="Bd" Grid.Column="1" CornerRadius="10,0,0,10">
                  <ContentPresenter Name="PART_Header" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                </Border>
                <TextBlock Margin="0 0 3 0" Grid.Column="2" HorizontalAlignment="Right" Foreground="#FF6D86AB" FontSize="12" FontWeight="Regular" VerticalAlignment="Center" Text="{Binding ChildrenCount}" />
              </Grid>
            </Border>
            <Border Name="border1" Grid.Row="1">
              <ItemsPresenter Name="ItemsHost" Margin="12,0,0,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Value="Download" Binding="{Binding Name}">
              <Setter TargetName="Bd1" Property="Border.CornerRadius" Value="0" />
              <Setter TargetName="Bd" Property="Border.CornerRadius" Value="0" />
            </DataTrigger>
            <DataTrigger Value="False" Binding="{Binding IsFolder}">
              <Setter TargetName="ExpanderBtn" Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <Trigger SourceName="PART_Header" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="#CEEAF9" />
              <Setter TargetName="Bd1" Property="Border.Background" Value="#CEEAF9" />
              <Setter Property="Foreground" Value="#001429" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Border.Background" Value="#CEEAF9" />
              <Setter TargetName="Bd1" Property="Border.Background" Value="#CEEAF9" />
              <Setter Property="Foreground" Value="#001429" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Border.Background" Value="#CEEAF9" />
              <Setter TargetName="Bd1" Property="Border.Background" Value="#CEEAF9" />
              <Setter Property="Foreground" Value="#001429" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <EventSetter Event="RequestBringIntoView" Handler="Item_RequestBringIntoView" />
  </Style>
  <HierarchicalDataTemplate x:Key="v7_treeviewitem_template" DataType="lvm6:TreeViewModel" ItemsSource="{Binding Childrens}">
    <Grid Height="28">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="auto" />
        <ColumnDefinition Width="auto" />
        <ColumnDefinition Width="auto" />
        <ColumnDefinition Width="70" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Border Visibility="{Binding Image, Converter={StaticResource v6_NullOrEmptyToVisibleConverter}}">
        <Image Width="16" Source="{Binding Image}" />
      </Border>
      <Border Grid.Column="1">
        <CheckBox Name="cb1" Cursor="Hand" Margin="0,0,10,0" Style="{StaticResource v6_comm_checkbox}" IsChecked="{Binding IsChecked}" Command="{Binding DataContext.OnCheckedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}" />
      </Border>
      <Border Grid.Column="2">
        <Image Name="dirIcon" Width="20" Height="20" HorizontalAlignment="Left" Source="{StaticResource v6_Icon_Folder}" />
      </Border>
      <TextBlock Grid.Column="3" TextTrimming="CharacterEllipsis" Foreground="#001429" FontSize="12" FontWeight="Regular" VerticalAlignment="Center" Margin="3,0,0,0" Text="{Binding Name}" ToolTip="{Binding Name}" />
    </Grid>
  </HierarchicalDataTemplate>
  <Style x:Key="v7_treeview" TargetType="{x:Type TreeView}">
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False" />
    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource v7_treeviewitem_style}" />
    <Setter Property="ItemTemplate" Value="{StaticResource v7_treeviewitem_template}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel IsItemsHost="True" Margin="0 0 0 0" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>